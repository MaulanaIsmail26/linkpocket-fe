import React from "react";
import Head from "next/head";
import style from "@/styles/pages/editProfile.module.scss";
import Image from "next/image";
import { useRouter } from "next/router";
import axios from "axios";

// MATERIAL UI
import Box from "@mui/material/Box";
import Input from "@mui/material/Input";
import InputLabel from "@mui/material/InputLabel";
import InputAdornment from "@mui/material/InputAdornment";
import FormControl from "@mui/material/FormControl";
import TextField from "@mui/material/TextField";
import FormControlLabel from "@mui/material/FormControlLabel";
import Checkbox from "@mui/material/Checkbox";

// ICON
import FacebookIcon from "@mui/icons-material/Facebook";
import GitHubIcon from "@mui/icons-material/GitHub";
import YouTubeIcon from "@mui/icons-material/YouTube";
import WhatsAppIcon from "@mui/icons-material/WhatsApp";
import TwitterIcon from "@mui/icons-material/Twitter";
import LinkedInIcon from "@mui/icons-material/LinkedIn";
import InstagramIcon from "@mui/icons-material/Instagram";
import DriveFolderUploadIcon from "@mui/icons-material/DriveFolderUpload";

export default function Edit() {
  const [addPhoto, setAddPhoto] = React.useState(false);
  const [uploadImg, setUploadImg] = React.useState(null);

  return (
    <div>
      <Head>
        <title>Edit Profile | LinkPocket</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={style.main}>
        <section className={`container-fluid ${style.edit}`}>
          <div className={`container`}>
            <div className={`row`}>
              <div className={`col-12 p-0`}>
                <div
                  className={`d-flex justify-content-center align-items-center ${style.editSide}`}
                >
                  {/* CARD FORM EDIT USER */}
                  <div
                    className={`px-sm-5 px-4 py-sm-3 py-2 ${style.cardEdit}`}
                  >
                    {/* HEAD CARD */}
                    <div className="row">
                      <div className={`col-12 ${style.headCard}`}>
                        <div className="d-flex justify-content-center align-items-center">
                          <Image
                            src={require("/public/images/Icon-app-outline.webp")}
                            className={`${style.iconApp}`}
                            // width={500}
                            height={75}
                            alt="Icon-Linkpocket"
                          />
                        </div>
                        <div className="d-flex justify-content-center align-items-center">
                          <h1 className={`${style.Title}`}>Edit Profile</h1>
                        </div>
                      </div>
                    </div>
                    {/* END OF HEAD CARD */}

                    <div className={`row ${style.linkSection}`}>
                      <div className="col-12">
                        {/* FORM PHOTO LINKPOCKET */}
                        <div className="row">
                          <div className={`col-12 ${style.formPhotoPart}`}>
                            {/* INSTRUCTION */}
                            <div className="d-flex justify-content-center">
                              <p className={`text-center ${style.instruction}`}>
                                Your LinkPocket photo.
                                <br />
                                Click the photo to replace
                              </p>
                            </div>

                            {/* FORM PHOTO LINKPOCKET */}
                            <div
                              className={`d-flex justify-content-center align-items-center mb-0 ${style.formPhoto}`}
                            >
                              <label
                                className="form-label border border-info border-3 rounded-4"
                                for="customFile1"
                                style={{
                                  backgroundImage: `url(${uploadImg})`,
                                  backgroundSize: "cover",
                                }}
                              >
                                {uploadImg === null ? (
                                  <>
                                    <div
                                      style={{
                                        height: "100%",
                                        width: "100%",
                                      }}
                                      className="d-flex justify-content-center align-items-center"
                                    >
                                      <div>
                                        <div className="d-flex justify-content-center">
                                          <DriveFolderUploadIcon
                                            style={{
                                              color: "#03e9f4",
                                              fontSize: "35px",
                                            }}
                                          />
                                        </div>
                                        <p
                                          style={{
                                            color: "#03e9f4",
                                            fontSize: "14px",
                                          }}
                                        >
                                          Upload Image
                                        </p>
                                        <p
                                          className={`d-flex justify-content-center ${style.rulesPhoto}`}
                                        >
                                          Ratio 1/1
                                        </p>
                                      </div>
                                    </div>
                                  </>
                                ) : null}
                              </label>
                              <input
                                type="file"
                                className="form-control d-none"
                                id="customFile1"
                                accept="image/*"
                                onChange={(e) => {
                                  setUploadImg(
                                    URL.createObjectURL(e.target.files[0])
                                  );
                                  setPicture(e.target.files[0]);
                                }}
                              />
                            </div>
                          </div>
                        </div>
                        {/* END OF FORM PHOTO LINKPOCKET */}

                        {/* FORM NAME LINKPOCKET */}
                        <div className="row mt-4">
                          <div className={`col-12 ${style.formNamePart}`}>
                            {/* INSTRUCTION */}
                            <div className="d-flex justify-content-center">
                              <p className={`${style.instruction}`}>
                                Your LinkPocket title
                              </p>
                            </div>
                            {/* FORM TITLE LINKPOCKET */}
                            <TextField
                              className={`mt-2 ${style.form}`}
                              id="outlined-read-only-input"
                              label="Title LinkPocket"
                              fullWidth
                              defaultValue="Hello World"
                              inputProps={{
                                style: { color: "white" },
                                maxLength: 16,
                              }}
                              sx={{
                                "& label": {
                                  color: "#03e9f4",
                                },
                                "& label.Mui-focused": {
                                  color: "#03e9f4",
                                },
                                "& .MuiInput-underline:after": {
                                  borderBottomColor: "#03e9f4",
                                },
                                "& .MuiOutlinedInput-root": {
                                  "& fieldset": {
                                    borderColor: "white",
                                  },
                                  "&:hover fieldset": {
                                    borderColor: "white",
                                  },
                                  "&.Mui-focused fieldset": {
                                    borderColor: "#03e9f4",
                                  },
                                },
                              }}
                            />
                            {/* <TextField
                            className={`${style.form}`}
                            color="primary"
                            id="outlined-basic name"
                            label="Name LinkPocket"
                            fullWidth
                            variant="outlined"
                            inputProps={{
                              style: {
                                color: "white",
                              },
                            }}
                            sx={{
                              "& label": {
                                color: "white",
                              },
                              "& label.Mui-focused": {
                                color: "#03e9f4",
                              },
                              "& .MuiInput-underline:after": {
                                borderBottomColor: "#03e9f4",
                              },
                              "& .MuiOutlinedInput-root": {
                                "& fieldset": {
                                  borderColor: "white",
                                },
                                "&:hover fieldset": {
                                  borderColor: "white",
                                },
                                "&.Mui-focused fieldset": {
                                  borderColor: "#03e9f4",
                                },
                              },
                            }}
                            // defaultValue={title}
                            // onChange={(e) => {
                            //   setTitle(e.target.value);
                            // }}
                          /> */}
                          </div>
                        </div>
                        {/* END OF FORM TITLE LINKPOCKET */}

                        {/* FORM DESC LINKPOCKET */}
                        <div className="row mt-4">
                          <div className={`col-12 ${style.formDescPart}`}>
                            {/* INSTRUCTION */}
                            <div className="d-flex justify-content-center">
                              <p className={`${style.instruction}`}>
                                Your LinkPocket Description
                              </p>
                            </div>
                            {/* FORM NAME LINKPOCKET */}
                            <TextField
                              className={`${style.form}`}
                              id="outlined-multiline-flexible"
                              label="Description"
                              multiline
                              maxRows={3}
                              fullWidth
                              // defaultValue="Hello World"
                              inputProps={{
                                style: { color: "white" },
                                maxLength: 60,
                              }}
                              sx={{
                                "& label": {
                                  color: "#03e9f4",
                                },
                                "& label.Mui-focused": {
                                  color: "#03e9f4",
                                },
                                "& .MuiInput-underline:after": {
                                  borderBottomColor: "#03e9f4",
                                },
                                "& .MuiOutlinedInput-root": {
                                  "& fieldset": {
                                    borderColor: "white",
                                  },
                                  "&:hover fieldset": {
                                    borderColor: "white",
                                  },
                                  "&.Mui-focused fieldset": {
                                    borderColor: "#03e9f4",
                                  },
                                },
                              }}
                            />
                            {/* <TextField
                            className={`${style.form}`}
                            color="primary"
                            id="outlined-basic name"
                            label="Name LinkPocket"
                            fullWidth
                            variant="outlined"
                            inputProps={{
                              style: {
                                color: "white",
                              },
                            }}
                            sx={{
                              "& label": {
                                color: "white",
                              },
                              "& label.Mui-focused": {
                                color: "#03e9f4",
                              },
                              "& .MuiInput-underline:after": {
                                borderBottomColor: "#03e9f4",
                              },
                              "& .MuiOutlinedInput-root": {
                                "& fieldset": {
                                  borderColor: "white",
                                },
                                "&:hover fieldset": {
                                  borderColor: "white",
                                },
                                "&.Mui-focused fieldset": {
                                  borderColor: "#03e9f4",
                                },
                              },
                            }}
                            // defaultValue={title}
                            // onChange={(e) => {
                            //   setTitle(e.target.value);
                            // }}
                          /> */}
                          </div>
                        </div>
                        {/* FORM DESC LINKPOCKET */}

                        {/* BUTTON SAVE EDIT */}
                        <div className="row mt-3">
                          <div className={`col-12 ${style.button}`}>
                            <div className="mt-4 d-flex justify-content-end">
                              <button
                                className={`btn ${style.btnCancel}`}
                                // onClick={() => {
                                //   setAddName(true);
                                //   setAddDesc(false);
                                //   setAddListLink(false);
                                //   setAddPhoto(false);
                                // }}
                                // disabled={isLoading}
                              >
                                {"Cancel"}
                              </button>
                              <button
                                className={`btn ${style.btnSave}`}
                                // disabled={desc.length == 0}
                                // onClick={() => {
                                //   setAddName(false);
                                //   setAddDesc(false);
                                //   setAddListLink(true);
                                //   setAddPhoto(false);
                                // }}
                                // // disabled={isLoading}
                              >
                                {"Save"}
                              </button>
                            </div>
                          </div>
                        </div>
                        {/* END OF BUTTON SAVE EDIT */}

                        <style>
                          {`
                            ::-webkit-scrollbar {
                              width: 0em;
                              height: 0.5em;
                            }
                            ::-webkit-scrollbar-thumb {
                              background-color: rgba(0, 0, 0, 0.2);
                            }
                          `}
                        </style>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
}
